ALGORITHM dotproduct
VAR
    vector :	STRUCT  //Definition d'un type structure pour les coordonnées des vecteurs
                        x : FLOAT;
                        y : FLOAT;
                        z : FLOAT;
                    END_STRUCT
    V : ARRAY_OF vector[n][2];
    n, i, j : INTEGER

////Procedure/////////
    PROCEDURE dot_product(v1: vector, v2: vector, Var ps: INTEGER)
    VAR
    ps, k: INTEGER:=0
    BEGIN
    ps:=0
    IF (v1.length=v2.length) THEN   //verifier la dimension des 2 vecteurs, le prog returne erreur s'ils ne sont pas de meme taille
        FOR k FROM 0 TO v1.length-1 DO
            ps:= ps+(v1[i]*v2[i]);
        END_FOR
        write ('Produit des vecteurs =', ps)
    ELSE
        write ('erreur! les deux vecteurs doivent etre du meme dimension')
    END_IF
    END

BEGIN
/////////Entree//////////
    write("Donner le nombre des paires de vecteurs:");
    READ(n);
    FOR i FROM 0 TO n-1 STEP 1  DO
        WRITE("Donner les coordonnées (x,y,z) du paire de vecteurs num:",i+1);
        FOR j FROM 0 TO 1 STEP 1  DO
            READ(V[i,j]);            
        END_FOR
        
    END_FOR

    FOR i FROM 0 TO n-1 DO
        dot_product(V[i][0], V[i][1], ps)
        IF (ps==0) THEN
            WRITE("le paire de vecteur ", V[i][0], V[i][1] ,"sont orthogonaux")
        END_IF
    END_FOR


    
END